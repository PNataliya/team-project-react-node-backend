{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Pets support API",
    "description": "API insrtuctions for web app Pets support",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://pets-support-webapp.onrender.com/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Pets",
      "description": "User pets endpoint"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Server: Validation error",
            "content": {}
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Provided email or login is wrong",
            "content": {}
          },
          "500": {
            "description": "Server: Validation error",
            "content": {}
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Token expired"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      }
    },
    "/news/getAll": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pets/add": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add user pet",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "New Pet object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorised",
            "content": {}
          },
          "500": {
            "description": "Server errors: Wrong Id or expired token",
            "content": {}
          }
        }
      }
    },
    "/pets/remove": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Remove user pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet's id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name", "address", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's email",
            "example": "Olesandr"
          },
          "address": {
            "type": "string",
            "description": "User's email",
            "example": "Boryspil, Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's email",
            "example": "+380960000000"
          }
        },
        "exapmle": {
          "email": "myEmail@gmail.com",
          "password": "1q2w3e4r",
          "name": "Olesandr",
          "address": "Boryspil, Kyiv",
          "phone": "+3809700000000"
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "User Olesandr registered successfully"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name",
                "example": "Olesandr"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "format": "email"
              },
              "token": {
                "type": "string",
                "description": "Access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGU1MDcxMGE4NDVmNDVhODA4YTg4YyIsImlhdCI6MTY3NTUxMzk2OSwiZXhwIjoxNjc1NTQyNzY5fQ.WFMDwRv2d87EUxHv67h4jBMZpuJtIKemwUySa-gPuwQ"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        },
        "exapmle": {
          "email": "myEmail@gmail.com",
          "password": "qwerty123"
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGU1MDcxMGE4NDVmNDVhODA4YTg4YyIsImlhdCI6MTY3NTUxMzk2OSwiZXhwIjoxNjc1NTQyNzY5fQ.WFMDwRv2d87EUxHv67h4jBMZpuJtIKemwUySa-gPuwQ"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User email",
                "format": "email"
              }
            }
          }
        }
      },
      "GetNewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "item id",
              "example": "63df690ke4678ssd32093179"
            },
            "title": {
              "type": "string",
              "description": "Title",
              "example": "В День ветеринара в столиці пройде безкоштовний тренінг з надання першої допомоги тваринам"
            },
            "url": {
              "type": "string",
              "description": "Original url",
              "example": "https://www.kmlvm.com.ua/v-den-veterynara-v-stolytsi-projde-bezkoshtovnyj-trening-z-nadannya-pershoyi-dopomogy-tvarynam/"
            },
            "description": {
              "type": "string",
              "description": "Detailed description",
              "example": "В неділю, 14 серпня, в Тимчасовому притулку для тварин ВДНГ пройде тренінг на тему «Надання першої допомоги тваринам..."
            },
            "date": {
              "type": "string",
              "description": "Date of publication",
              "example": ""
            }
          }
        }
      },
      "NewPetRequest": {
        "type": "object",
        "required": ["email", "breed", "comments"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Kitty"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Toyger Cat"
          },
          "comments": {
            "type": "string",
            "description": "User's email",
            "example": "My sweety cinnabon"
          },
          "date": {
            "type": "string",
            "description": "Date of birth",
            "example": "12.08.2022"
          }
        }
      },
      "NewPetResponce": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Kitty"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Toyger Cat"
          },
          "comments": {
            "type": "string",
            "description": "User's email",
            "example": "My sweety cinnabon"
          },
          "date": {
            "type": "string",
            "description": "Date of birth",
            "format": "date"
          },
          "ref": {
            "type": "string",
            "description": "Date of birth",
            "format": "date"
          },
          "_id": {
            "type": "string",
            "description": "Date of birth",
            "format": "date"
          },
          "createdAT": {
            "type": "string",
            "description": "Date of birth",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of birth",
            "format": "date"
          }
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
